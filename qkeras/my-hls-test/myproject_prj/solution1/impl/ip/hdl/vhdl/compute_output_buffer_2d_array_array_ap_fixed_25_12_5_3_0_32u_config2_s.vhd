-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_output_buffer_2d_array_array_ap_fixed_25_12_5_3_0_32u_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_elem_data_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_0_V_full_n : IN STD_LOGIC;
    res_stream_V_data_0_V_write : OUT STD_LOGIC;
    res_stream_V_data_1_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_1_V_full_n : IN STD_LOGIC;
    res_stream_V_data_1_V_write : OUT STD_LOGIC;
    res_stream_V_data_2_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_2_V_full_n : IN STD_LOGIC;
    res_stream_V_data_2_V_write : OUT STD_LOGIC;
    res_stream_V_data_3_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_3_V_full_n : IN STD_LOGIC;
    res_stream_V_data_3_V_write : OUT STD_LOGIC;
    res_stream_V_data_4_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_4_V_full_n : IN STD_LOGIC;
    res_stream_V_data_4_V_write : OUT STD_LOGIC;
    res_stream_V_data_5_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_5_V_full_n : IN STD_LOGIC;
    res_stream_V_data_5_V_write : OUT STD_LOGIC;
    res_stream_V_data_6_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_6_V_full_n : IN STD_LOGIC;
    res_stream_V_data_6_V_write : OUT STD_LOGIC;
    res_stream_V_data_7_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_7_V_full_n : IN STD_LOGIC;
    res_stream_V_data_7_V_write : OUT STD_LOGIC;
    res_stream_V_data_8_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_8_V_full_n : IN STD_LOGIC;
    res_stream_V_data_8_V_write : OUT STD_LOGIC;
    res_stream_V_data_9_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_9_V_full_n : IN STD_LOGIC;
    res_stream_V_data_9_V_write : OUT STD_LOGIC;
    res_stream_V_data_10_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_10_V_full_n : IN STD_LOGIC;
    res_stream_V_data_10_V_write : OUT STD_LOGIC;
    res_stream_V_data_11_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_11_V_full_n : IN STD_LOGIC;
    res_stream_V_data_11_V_write : OUT STD_LOGIC;
    res_stream_V_data_12_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_12_V_full_n : IN STD_LOGIC;
    res_stream_V_data_12_V_write : OUT STD_LOGIC;
    res_stream_V_data_13_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_13_V_full_n : IN STD_LOGIC;
    res_stream_V_data_13_V_write : OUT STD_LOGIC;
    res_stream_V_data_14_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_14_V_full_n : IN STD_LOGIC;
    res_stream_V_data_14_V_write : OUT STD_LOGIC;
    res_stream_V_data_15_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_15_V_full_n : IN STD_LOGIC;
    res_stream_V_data_15_V_write : OUT STD_LOGIC;
    res_stream_V_data_16_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_16_V_full_n : IN STD_LOGIC;
    res_stream_V_data_16_V_write : OUT STD_LOGIC;
    res_stream_V_data_17_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_17_V_full_n : IN STD_LOGIC;
    res_stream_V_data_17_V_write : OUT STD_LOGIC;
    res_stream_V_data_18_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_18_V_full_n : IN STD_LOGIC;
    res_stream_V_data_18_V_write : OUT STD_LOGIC;
    res_stream_V_data_19_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_19_V_full_n : IN STD_LOGIC;
    res_stream_V_data_19_V_write : OUT STD_LOGIC;
    res_stream_V_data_20_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_20_V_full_n : IN STD_LOGIC;
    res_stream_V_data_20_V_write : OUT STD_LOGIC;
    res_stream_V_data_21_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_21_V_full_n : IN STD_LOGIC;
    res_stream_V_data_21_V_write : OUT STD_LOGIC;
    res_stream_V_data_22_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_22_V_full_n : IN STD_LOGIC;
    res_stream_V_data_22_V_write : OUT STD_LOGIC;
    res_stream_V_data_23_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_23_V_full_n : IN STD_LOGIC;
    res_stream_V_data_23_V_write : OUT STD_LOGIC;
    res_stream_V_data_24_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_24_V_full_n : IN STD_LOGIC;
    res_stream_V_data_24_V_write : OUT STD_LOGIC;
    res_stream_V_data_25_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_25_V_full_n : IN STD_LOGIC;
    res_stream_V_data_25_V_write : OUT STD_LOGIC;
    res_stream_V_data_26_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_26_V_full_n : IN STD_LOGIC;
    res_stream_V_data_26_V_write : OUT STD_LOGIC;
    res_stream_V_data_27_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_27_V_full_n : IN STD_LOGIC;
    res_stream_V_data_27_V_write : OUT STD_LOGIC;
    res_stream_V_data_28_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_28_V_full_n : IN STD_LOGIC;
    res_stream_V_data_28_V_write : OUT STD_LOGIC;
    res_stream_V_data_29_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_29_V_full_n : IN STD_LOGIC;
    res_stream_V_data_29_V_write : OUT STD_LOGIC;
    res_stream_V_data_30_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_30_V_full_n : IN STD_LOGIC;
    res_stream_V_data_30_V_write : OUT STD_LOGIC;
    res_stream_V_data_31_V_din : OUT STD_LOGIC_VECTOR (24 downto 0);
    res_stream_V_data_31_V_full_n : IN STD_LOGIC;
    res_stream_V_data_31_V_write : OUT STD_LOGIC );
end;


architecture behav of compute_output_buffer_2d_array_array_ap_fixed_25_12_5_3_0_32u_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal kernel_data_V_1333 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2334 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3335 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sX_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_stream_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal and_ln284_2_reg_732 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_stream_V_data_1_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_2_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_3_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_4_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_5_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_6_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_7_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_8_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_9_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_10_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_11_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_12_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_13_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_14_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_15_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_16_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_17_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_18_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_19_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_20_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_21_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_22_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_23_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_24_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_25_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_26_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_27_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_28_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_29_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_30_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_31_V_blk_n : STD_LOGIC;
    signal sX_3_load_reg_700 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln284_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln284_reg_705 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_3_load_reg_710 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln284_1_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln284_1_reg_715 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_3_load_reg_720 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_3_load_reg_726 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln284_2_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_0_V_reg_736 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_ready : STD_LOGIC;
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_done : STD_LOGIC;
    signal tmp_data_1_V_reg_741 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_2_V_reg_746 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_3_V_reg_751 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_4_V_reg_756 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_5_V_reg_761 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_6_V_reg_766 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_7_V_reg_771 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_8_V_reg_776 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_9_V_reg_781 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_10_V_reg_786 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_11_V_reg_791 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_12_V_reg_796 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_13_V_reg_801 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_14_V_reg_806 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_15_V_reg_811 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_16_V_reg_816 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_17_V_reg_821 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_18_V_reg_826 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_19_V_reg_831 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_20_V_reg_836 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_21_V_reg_841 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_22_V_reg_846 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_23_V_reg_851 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_24_V_reg_856 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_25_V_reg_861 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_26_V_reg_866 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_27_V_reg_871 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_28_V_reg_876 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_29_V_reg_881 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_30_V_reg_886 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_31_V_reg_891 : STD_LOGIC_VECTOR (24 downto 0);
    signal icmp_ln303_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln303_reg_896 : STD_LOGIC_VECTOR (0 downto 0);
    signal io_acc_block_signal_op111 : STD_LOGIC;
    signal ap_block_state3 : BOOLEAN;
    signal select_ln318_fu_636_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln318_reg_900 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln307_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln307_reg_905 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln313_fu_676_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln313_reg_909 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start : STD_LOGIC;
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_idle : STD_LOGIC;
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_3 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_4 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_5 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_6 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_7 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_8 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_9 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_10 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_11 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_12 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_13 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_14 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_15 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_16 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_17 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_18 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_19 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_20 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_21 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_22 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_23 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_24 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_25 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_26 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_27 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_28 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_29 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_30 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_31 : STD_LOGIC_VECTOR (24 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_start : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_done : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_idle : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_ready : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_240_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_reg_236 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start_reg : STD_LOGIC := '0';
    signal add_ln311_fu_660_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln316_fu_620_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_431_fu_433_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_432_fu_453_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln284_2_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln284_3_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_1_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln318_fu_631_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln313_fu_671_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_condition_305 : BOOLEAN;
    signal ap_condition_314 : BOOLEAN;

    component dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        kernel_data_V_8 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_0 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_1333 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_2334 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3335 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_4 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_5 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_6 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_7 : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247 : component dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start,
        ap_done => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_done,
        ap_idle => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_idle,
        ap_ready => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_ready,
        kernel_data_V_8 => kernel_data_V_8,
        kernel_data_V_0 => kernel_data_V_0,
        kernel_data_V_1333 => kernel_data_V_1333,
        kernel_data_V_2334 => kernel_data_V_2334,
        kernel_data_V_3335 => kernel_data_V_3335,
        kernel_data_V_4 => kernel_data_V_4,
        kernel_data_V_5 => kernel_data_V_5,
        kernel_data_V_6 => kernel_data_V_6,
        kernel_data_V_7 => kernel_data_V_7,
        ap_return_0 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_0,
        ap_return_1 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_1,
        ap_return_2 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_2,
        ap_return_3 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_3,
        ap_return_4 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_4,
        ap_return_5 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_5,
        ap_return_6 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_6,
        ap_return_7 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_7,
        ap_return_8 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_8,
        ap_return_9 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_9,
        ap_return_10 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_10,
        ap_return_11 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_11,
        ap_return_12 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_12,
        ap_return_13 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_13,
        ap_return_14 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_14,
        ap_return_15 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_15,
        ap_return_16 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_16,
        ap_return_17 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_17,
        ap_return_18 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_18,
        ap_return_19 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_19,
        ap_return_20 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_20,
        ap_return_21 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_21,
        ap_return_22 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_22,
        ap_return_23 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_23,
        ap_return_24 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_24,
        ap_return_25 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_25,
        ap_return_26 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_26,
        ap_return_27 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_27,
        ap_return_28 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_28,
        ap_return_29 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_29,
        ap_return_30 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_30,
        ap_return_31 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_31);

    call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273 : component shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_start,
        ap_done => call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_done,
        ap_idle => call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_idle,
        ap_ready => call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_ready,
        in_elem_data_V_read => in_elem_data_V_read,
        kernel_window_1_V_read => kernel_data_V_1333,
        kernel_window_2_V_read => kernel_data_V_2334,
        kernel_window_4_V_read => kernel_data_V_4,
        kernel_window_5_V_read => kernel_data_V_5,
        kernel_window_7_V_read => kernel_data_V_7,
        kernel_window_8_V_read => kernel_data_V_8,
        ap_return_0 => call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_0,
        ap_return_1 => call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_1,
        ap_return_2 => call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_2,
        ap_return_3 => call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_3,
        ap_return_4 => call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_4,
        ap_return_5 => call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_5,
        ap_return_6 => call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_6,
        ap_return_7 => call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_7,
        ap_return_8 => call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_8);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_1 = and_ln284_2_fu_481_p2))) then 
                    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_ready = ap_const_logic_1)) then 
                    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    pX_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_305)) then
                if ((icmp_ln303_fu_615_p2 = ap_const_lv1_1)) then 
                    pX_3 <= ap_const_lv32_0;
                elsif ((icmp_ln303_fu_615_p2 = ap_const_lv1_0)) then 
                    pX_3 <= add_ln316_fu_620_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_314)) then
                if ((icmp_ln307_fu_655_p2 = ap_const_lv1_1)) then 
                    pY_3 <= ap_const_lv32_0;
                elsif ((icmp_ln307_fu_655_p2 = ap_const_lv1_0)) then 
                    pY_3 <= add_ln311_fu_660_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln303_reg_896 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                sX_3 <= select_ln318_reg_900;
            elsif ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln303_fu_615_p2 = ap_const_lv1_1))) then 
                sX_3 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    storemerge_reg_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln307_fu_655_p2 = ap_const_lv1_1) and (icmp_ln303_fu_615_p2 = ap_const_lv1_1))) then 
                storemerge_reg_236 <= ap_const_lv32_0;
            elsif (((icmp_ln307_reg_905 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln303_reg_896 = ap_const_lv1_1))) then 
                storemerge_reg_236 <= select_ln313_reg_909;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                and_ln284_2_reg_732 <= and_ln284_2_fu_481_p2;
                icmp_ln284_1_reg_715 <= icmp_ln284_1_fu_423_p2;
                icmp_ln284_reg_705 <= icmp_ln284_fu_413_p2;
                kernel_data_V_0 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_0;
                kernel_data_V_1333 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_3;
                kernel_data_V_2334 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_4;
                kernel_data_V_3335 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_1;
                kernel_data_V_4 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_5;
                kernel_data_V_5 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_6;
                kernel_data_V_6 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_2;
                kernel_data_V_7 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_7;
                kernel_data_V_8 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_8;
                pX_3_load_reg_726 <= pX_3;
                pY_3_load_reg_720 <= pY_3;
                sX_3_load_reg_700 <= sX_3;
                sY_3_load_reg_710 <= sY_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln303_reg_896 <= icmp_ln303_fu_615_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln303_fu_615_p2 = ap_const_lv1_1))) then
                icmp_ln307_reg_905 <= icmp_ln307_fu_655_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln303_reg_896 = ap_const_lv1_1))) then
                sY_3 <= ap_phi_mux_storemerge_phi_fu_240_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (icmp_ln307_fu_655_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln303_fu_615_p2 = ap_const_lv1_1))) then
                select_ln313_reg_909 <= select_ln313_fu_676_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (icmp_ln303_fu_615_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                select_ln318_reg_900 <= select_ln318_fu_636_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_data_0_V_reg_736 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_0;
                tmp_data_10_V_reg_786 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_10;
                tmp_data_11_V_reg_791 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_11;
                tmp_data_12_V_reg_796 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_12;
                tmp_data_13_V_reg_801 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_13;
                tmp_data_14_V_reg_806 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_14;
                tmp_data_15_V_reg_811 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_15;
                tmp_data_16_V_reg_816 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_16;
                tmp_data_17_V_reg_821 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_17;
                tmp_data_18_V_reg_826 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_18;
                tmp_data_19_V_reg_831 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_19;
                tmp_data_1_V_reg_741 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_1;
                tmp_data_20_V_reg_836 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_20;
                tmp_data_21_V_reg_841 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_21;
                tmp_data_22_V_reg_846 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_22;
                tmp_data_23_V_reg_851 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_23;
                tmp_data_24_V_reg_856 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_24;
                tmp_data_25_V_reg_861 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_25;
                tmp_data_26_V_reg_866 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_26;
                tmp_data_27_V_reg_871 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_27;
                tmp_data_28_V_reg_876 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_28;
                tmp_data_29_V_reg_881 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_29;
                tmp_data_2_V_reg_746 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_2;
                tmp_data_30_V_reg_886 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_30;
                tmp_data_31_V_reg_891 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_31;
                tmp_data_3_V_reg_751 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_3;
                tmp_data_4_V_reg_756 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_4;
                tmp_data_5_V_reg_761 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_5;
                tmp_data_6_V_reg_766 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_6;
                tmp_data_7_V_reg_771 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_7;
                tmp_data_8_V_reg_776 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_8;
                tmp_data_9_V_reg_781 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_9;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, and_ln284_2_reg_732, and_ln284_2_fu_481_p2, ap_CS_fsm_state2, grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_done, io_acc_block_signal_op111)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_lv1_0 = and_ln284_2_fu_481_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_1 = and_ln284_2_fu_481_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln311_fu_660_p2 <= std_logic_vector(unsigned(pY_3_load_reg_720) + unsigned(ap_const_lv32_1));
    add_ln313_fu_671_p2 <= std_logic_vector(unsigned(sY_3_load_reg_710) + unsigned(ap_const_lv32_1));
    add_ln316_fu_620_p2 <= std_logic_vector(unsigned(pX_3_load_reg_726) + unsigned(ap_const_lv32_1));
    add_ln318_fu_631_p2 <= std_logic_vector(unsigned(sX_3_load_reg_700) + unsigned(ap_const_lv32_1));
    and_ln284_1_fu_475_p2 <= (icmp_ln284_3_fu_463_p2 and icmp_ln284_2_fu_443_p2);
    and_ln284_2_fu_481_p2 <= (and_ln284_fu_469_p2 and and_ln284_1_fu_475_p2);
    and_ln284_fu_469_p2 <= (icmp_ln284_fu_413_p2 and icmp_ln284_1_fu_423_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_block_state3_assign_proc : process(and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
                ap_block_state3 <= ((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732));
    end process;


    ap_condition_305_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
                ap_condition_305 <= (not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3));
    end process;


    ap_condition_314_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, icmp_ln303_fu_615_p2, io_acc_block_signal_op111)
    begin
                ap_condition_314 <= (not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln303_fu_615_p2 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_phi_fu_240_p4_assign_proc : process(icmp_ln303_reg_896, icmp_ln307_reg_905, select_ln313_reg_909, storemerge_reg_236, ap_CS_fsm_state4)
    begin
        if (((icmp_ln307_reg_905 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln303_reg_896 = ap_const_lv1_1))) then 
            ap_phi_mux_storemerge_phi_fu_240_p4 <= select_ln313_reg_909;
        else 
            ap_phi_mux_storemerge_phi_fu_240_p4 <= storemerge_reg_236;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_start_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_start <= ap_const_logic_1;
        else 
            call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start_reg;
    icmp_ln284_1_fu_423_p2 <= "1" when (sY_3 = ap_const_lv32_2) else "0";
    icmp_ln284_2_fu_443_p2 <= "1" when (signed(tmp_431_fu_433_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln284_3_fu_463_p2 <= "1" when (signed(tmp_432_fu_453_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln284_fu_413_p2 <= "1" when (sX_3 = ap_const_lv32_2) else "0";
    icmp_ln303_fu_615_p2 <= "1" when (pX_3_load_reg_726 = ap_const_lv32_1B) else "0";
    icmp_ln307_fu_655_p2 <= "1" when (pY_3_load_reg_720 = ap_const_lv32_1B) else "0";
    io_acc_block_signal_op111 <= (res_stream_V_data_9_V_full_n and res_stream_V_data_8_V_full_n and res_stream_V_data_7_V_full_n and res_stream_V_data_6_V_full_n and res_stream_V_data_5_V_full_n and res_stream_V_data_4_V_full_n and res_stream_V_data_3_V_full_n and res_stream_V_data_31_V_full_n and res_stream_V_data_30_V_full_n and res_stream_V_data_2_V_full_n and res_stream_V_data_29_V_full_n and res_stream_V_data_28_V_full_n and res_stream_V_data_27_V_full_n and res_stream_V_data_26_V_full_n and res_stream_V_data_25_V_full_n and res_stream_V_data_24_V_full_n and res_stream_V_data_23_V_full_n and res_stream_V_data_22_V_full_n and res_stream_V_data_21_V_full_n and res_stream_V_data_20_V_full_n and res_stream_V_data_1_V_full_n and res_stream_V_data_19_V_full_n and res_stream_V_data_18_V_full_n and res_stream_V_data_17_V_full_n and res_stream_V_data_16_V_full_n and res_stream_V_data_15_V_full_n and res_stream_V_data_14_V_full_n and res_stream_V_data_13_V_full_n and res_stream_V_data_12_V_full_n and res_stream_V_data_11_V_full_n and res_stream_V_data_10_V_full_n and res_stream_V_data_0_V_full_n);

    res_stream_V_data_0_V_blk_n_assign_proc : process(res_stream_V_data_0_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_0_V_blk_n <= res_stream_V_data_0_V_full_n;
        else 
            res_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_0_V_din <= tmp_data_0_V_reg_736;

    res_stream_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_10_V_blk_n_assign_proc : process(res_stream_V_data_10_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_10_V_blk_n <= res_stream_V_data_10_V_full_n;
        else 
            res_stream_V_data_10_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_10_V_din <= tmp_data_10_V_reg_786;

    res_stream_V_data_10_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_10_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_10_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_11_V_blk_n_assign_proc : process(res_stream_V_data_11_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_11_V_blk_n <= res_stream_V_data_11_V_full_n;
        else 
            res_stream_V_data_11_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_11_V_din <= tmp_data_11_V_reg_791;

    res_stream_V_data_11_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_11_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_11_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_12_V_blk_n_assign_proc : process(res_stream_V_data_12_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_12_V_blk_n <= res_stream_V_data_12_V_full_n;
        else 
            res_stream_V_data_12_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_12_V_din <= tmp_data_12_V_reg_796;

    res_stream_V_data_12_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_12_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_12_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_13_V_blk_n_assign_proc : process(res_stream_V_data_13_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_13_V_blk_n <= res_stream_V_data_13_V_full_n;
        else 
            res_stream_V_data_13_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_13_V_din <= tmp_data_13_V_reg_801;

    res_stream_V_data_13_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_13_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_13_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_14_V_blk_n_assign_proc : process(res_stream_V_data_14_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_14_V_blk_n <= res_stream_V_data_14_V_full_n;
        else 
            res_stream_V_data_14_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_14_V_din <= tmp_data_14_V_reg_806;

    res_stream_V_data_14_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_14_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_14_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_15_V_blk_n_assign_proc : process(res_stream_V_data_15_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_15_V_blk_n <= res_stream_V_data_15_V_full_n;
        else 
            res_stream_V_data_15_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_15_V_din <= tmp_data_15_V_reg_811;

    res_stream_V_data_15_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_15_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_15_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_16_V_blk_n_assign_proc : process(res_stream_V_data_16_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_16_V_blk_n <= res_stream_V_data_16_V_full_n;
        else 
            res_stream_V_data_16_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_16_V_din <= tmp_data_16_V_reg_816;

    res_stream_V_data_16_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_16_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_16_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_17_V_blk_n_assign_proc : process(res_stream_V_data_17_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_17_V_blk_n <= res_stream_V_data_17_V_full_n;
        else 
            res_stream_V_data_17_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_17_V_din <= tmp_data_17_V_reg_821;

    res_stream_V_data_17_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_17_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_17_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_18_V_blk_n_assign_proc : process(res_stream_V_data_18_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_18_V_blk_n <= res_stream_V_data_18_V_full_n;
        else 
            res_stream_V_data_18_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_18_V_din <= tmp_data_18_V_reg_826;

    res_stream_V_data_18_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_18_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_18_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_19_V_blk_n_assign_proc : process(res_stream_V_data_19_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_19_V_blk_n <= res_stream_V_data_19_V_full_n;
        else 
            res_stream_V_data_19_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_19_V_din <= tmp_data_19_V_reg_831;

    res_stream_V_data_19_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_19_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_19_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_1_V_blk_n_assign_proc : process(res_stream_V_data_1_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_1_V_blk_n <= res_stream_V_data_1_V_full_n;
        else 
            res_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_1_V_din <= tmp_data_1_V_reg_741;

    res_stream_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_20_V_blk_n_assign_proc : process(res_stream_V_data_20_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_20_V_blk_n <= res_stream_V_data_20_V_full_n;
        else 
            res_stream_V_data_20_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_20_V_din <= tmp_data_20_V_reg_836;

    res_stream_V_data_20_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_20_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_20_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_21_V_blk_n_assign_proc : process(res_stream_V_data_21_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_21_V_blk_n <= res_stream_V_data_21_V_full_n;
        else 
            res_stream_V_data_21_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_21_V_din <= tmp_data_21_V_reg_841;

    res_stream_V_data_21_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_21_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_21_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_22_V_blk_n_assign_proc : process(res_stream_V_data_22_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_22_V_blk_n <= res_stream_V_data_22_V_full_n;
        else 
            res_stream_V_data_22_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_22_V_din <= tmp_data_22_V_reg_846;

    res_stream_V_data_22_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_22_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_22_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_23_V_blk_n_assign_proc : process(res_stream_V_data_23_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_23_V_blk_n <= res_stream_V_data_23_V_full_n;
        else 
            res_stream_V_data_23_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_23_V_din <= tmp_data_23_V_reg_851;

    res_stream_V_data_23_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_23_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_23_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_24_V_blk_n_assign_proc : process(res_stream_V_data_24_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_24_V_blk_n <= res_stream_V_data_24_V_full_n;
        else 
            res_stream_V_data_24_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_24_V_din <= tmp_data_24_V_reg_856;

    res_stream_V_data_24_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_24_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_24_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_25_V_blk_n_assign_proc : process(res_stream_V_data_25_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_25_V_blk_n <= res_stream_V_data_25_V_full_n;
        else 
            res_stream_V_data_25_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_25_V_din <= tmp_data_25_V_reg_861;

    res_stream_V_data_25_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_25_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_25_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_26_V_blk_n_assign_proc : process(res_stream_V_data_26_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_26_V_blk_n <= res_stream_V_data_26_V_full_n;
        else 
            res_stream_V_data_26_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_26_V_din <= tmp_data_26_V_reg_866;

    res_stream_V_data_26_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_26_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_26_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_27_V_blk_n_assign_proc : process(res_stream_V_data_27_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_27_V_blk_n <= res_stream_V_data_27_V_full_n;
        else 
            res_stream_V_data_27_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_27_V_din <= tmp_data_27_V_reg_871;

    res_stream_V_data_27_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_27_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_27_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_28_V_blk_n_assign_proc : process(res_stream_V_data_28_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_28_V_blk_n <= res_stream_V_data_28_V_full_n;
        else 
            res_stream_V_data_28_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_28_V_din <= tmp_data_28_V_reg_876;

    res_stream_V_data_28_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_28_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_28_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_29_V_blk_n_assign_proc : process(res_stream_V_data_29_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_29_V_blk_n <= res_stream_V_data_29_V_full_n;
        else 
            res_stream_V_data_29_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_29_V_din <= tmp_data_29_V_reg_881;

    res_stream_V_data_29_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_29_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_29_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_2_V_blk_n_assign_proc : process(res_stream_V_data_2_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_2_V_blk_n <= res_stream_V_data_2_V_full_n;
        else 
            res_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_2_V_din <= tmp_data_2_V_reg_746;

    res_stream_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_30_V_blk_n_assign_proc : process(res_stream_V_data_30_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_30_V_blk_n <= res_stream_V_data_30_V_full_n;
        else 
            res_stream_V_data_30_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_30_V_din <= tmp_data_30_V_reg_886;

    res_stream_V_data_30_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_30_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_30_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_31_V_blk_n_assign_proc : process(res_stream_V_data_31_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_31_V_blk_n <= res_stream_V_data_31_V_full_n;
        else 
            res_stream_V_data_31_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_31_V_din <= tmp_data_31_V_reg_891;

    res_stream_V_data_31_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_31_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_31_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_3_V_blk_n_assign_proc : process(res_stream_V_data_3_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_3_V_blk_n <= res_stream_V_data_3_V_full_n;
        else 
            res_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_3_V_din <= tmp_data_3_V_reg_751;

    res_stream_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_4_V_blk_n_assign_proc : process(res_stream_V_data_4_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_4_V_blk_n <= res_stream_V_data_4_V_full_n;
        else 
            res_stream_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_4_V_din <= tmp_data_4_V_reg_756;

    res_stream_V_data_4_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_5_V_blk_n_assign_proc : process(res_stream_V_data_5_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_5_V_blk_n <= res_stream_V_data_5_V_full_n;
        else 
            res_stream_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_5_V_din <= tmp_data_5_V_reg_761;

    res_stream_V_data_5_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_6_V_blk_n_assign_proc : process(res_stream_V_data_6_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_6_V_blk_n <= res_stream_V_data_6_V_full_n;
        else 
            res_stream_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_6_V_din <= tmp_data_6_V_reg_766;

    res_stream_V_data_6_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_7_V_blk_n_assign_proc : process(res_stream_V_data_7_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_7_V_blk_n <= res_stream_V_data_7_V_full_n;
        else 
            res_stream_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_7_V_din <= tmp_data_7_V_reg_771;

    res_stream_V_data_7_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_8_V_blk_n_assign_proc : process(res_stream_V_data_8_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_8_V_blk_n <= res_stream_V_data_8_V_full_n;
        else 
            res_stream_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_8_V_din <= tmp_data_8_V_reg_776;

    res_stream_V_data_8_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_8_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_8_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_9_V_blk_n_assign_proc : process(res_stream_V_data_9_V_full_n, ap_CS_fsm_state3, and_ln284_2_reg_732)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_9_V_blk_n <= res_stream_V_data_9_V_full_n;
        else 
            res_stream_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_9_V_din <= tmp_data_9_V_reg_781;

    res_stream_V_data_9_V_write_assign_proc : process(ap_CS_fsm_state3, and_ln284_2_reg_732, io_acc_block_signal_op111)
    begin
        if ((not(((io_acc_block_signal_op111 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_732))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln284_2_reg_732))) then 
            res_stream_V_data_9_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_9_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln313_fu_676_p3 <= 
        ap_const_lv32_2 when (icmp_ln284_1_reg_715(0) = '1') else 
        add_ln313_fu_671_p2;
    select_ln318_fu_636_p3 <= 
        ap_const_lv32_2 when (icmp_ln284_reg_705(0) = '1') else 
        add_ln318_fu_631_p2;
    tmp_431_fu_433_p4 <= pY_3(31 downto 1);
    tmp_432_fu_453_p4 <= pX_3(31 downto 1);
end behav;
