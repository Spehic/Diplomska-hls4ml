// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_output_buffer_2d_array_array_ap_fixed_25_12_5_3_0_32u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_elem_data_V_read,
        res_stream_V_data_0_V_din,
        res_stream_V_data_0_V_full_n,
        res_stream_V_data_0_V_write,
        res_stream_V_data_1_V_din,
        res_stream_V_data_1_V_full_n,
        res_stream_V_data_1_V_write,
        res_stream_V_data_2_V_din,
        res_stream_V_data_2_V_full_n,
        res_stream_V_data_2_V_write,
        res_stream_V_data_3_V_din,
        res_stream_V_data_3_V_full_n,
        res_stream_V_data_3_V_write,
        res_stream_V_data_4_V_din,
        res_stream_V_data_4_V_full_n,
        res_stream_V_data_4_V_write,
        res_stream_V_data_5_V_din,
        res_stream_V_data_5_V_full_n,
        res_stream_V_data_5_V_write,
        res_stream_V_data_6_V_din,
        res_stream_V_data_6_V_full_n,
        res_stream_V_data_6_V_write,
        res_stream_V_data_7_V_din,
        res_stream_V_data_7_V_full_n,
        res_stream_V_data_7_V_write,
        res_stream_V_data_8_V_din,
        res_stream_V_data_8_V_full_n,
        res_stream_V_data_8_V_write,
        res_stream_V_data_9_V_din,
        res_stream_V_data_9_V_full_n,
        res_stream_V_data_9_V_write,
        res_stream_V_data_10_V_din,
        res_stream_V_data_10_V_full_n,
        res_stream_V_data_10_V_write,
        res_stream_V_data_11_V_din,
        res_stream_V_data_11_V_full_n,
        res_stream_V_data_11_V_write,
        res_stream_V_data_12_V_din,
        res_stream_V_data_12_V_full_n,
        res_stream_V_data_12_V_write,
        res_stream_V_data_13_V_din,
        res_stream_V_data_13_V_full_n,
        res_stream_V_data_13_V_write,
        res_stream_V_data_14_V_din,
        res_stream_V_data_14_V_full_n,
        res_stream_V_data_14_V_write,
        res_stream_V_data_15_V_din,
        res_stream_V_data_15_V_full_n,
        res_stream_V_data_15_V_write,
        res_stream_V_data_16_V_din,
        res_stream_V_data_16_V_full_n,
        res_stream_V_data_16_V_write,
        res_stream_V_data_17_V_din,
        res_stream_V_data_17_V_full_n,
        res_stream_V_data_17_V_write,
        res_stream_V_data_18_V_din,
        res_stream_V_data_18_V_full_n,
        res_stream_V_data_18_V_write,
        res_stream_V_data_19_V_din,
        res_stream_V_data_19_V_full_n,
        res_stream_V_data_19_V_write,
        res_stream_V_data_20_V_din,
        res_stream_V_data_20_V_full_n,
        res_stream_V_data_20_V_write,
        res_stream_V_data_21_V_din,
        res_stream_V_data_21_V_full_n,
        res_stream_V_data_21_V_write,
        res_stream_V_data_22_V_din,
        res_stream_V_data_22_V_full_n,
        res_stream_V_data_22_V_write,
        res_stream_V_data_23_V_din,
        res_stream_V_data_23_V_full_n,
        res_stream_V_data_23_V_write,
        res_stream_V_data_24_V_din,
        res_stream_V_data_24_V_full_n,
        res_stream_V_data_24_V_write,
        res_stream_V_data_25_V_din,
        res_stream_V_data_25_V_full_n,
        res_stream_V_data_25_V_write,
        res_stream_V_data_26_V_din,
        res_stream_V_data_26_V_full_n,
        res_stream_V_data_26_V_write,
        res_stream_V_data_27_V_din,
        res_stream_V_data_27_V_full_n,
        res_stream_V_data_27_V_write,
        res_stream_V_data_28_V_din,
        res_stream_V_data_28_V_full_n,
        res_stream_V_data_28_V_write,
        res_stream_V_data_29_V_din,
        res_stream_V_data_29_V_full_n,
        res_stream_V_data_29_V_write,
        res_stream_V_data_30_V_din,
        res_stream_V_data_30_V_full_n,
        res_stream_V_data_30_V_write,
        res_stream_V_data_31_V_din,
        res_stream_V_data_31_V_full_n,
        res_stream_V_data_31_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] in_elem_data_V_read;
output  [24:0] res_stream_V_data_0_V_din;
input   res_stream_V_data_0_V_full_n;
output   res_stream_V_data_0_V_write;
output  [24:0] res_stream_V_data_1_V_din;
input   res_stream_V_data_1_V_full_n;
output   res_stream_V_data_1_V_write;
output  [24:0] res_stream_V_data_2_V_din;
input   res_stream_V_data_2_V_full_n;
output   res_stream_V_data_2_V_write;
output  [24:0] res_stream_V_data_3_V_din;
input   res_stream_V_data_3_V_full_n;
output   res_stream_V_data_3_V_write;
output  [24:0] res_stream_V_data_4_V_din;
input   res_stream_V_data_4_V_full_n;
output   res_stream_V_data_4_V_write;
output  [24:0] res_stream_V_data_5_V_din;
input   res_stream_V_data_5_V_full_n;
output   res_stream_V_data_5_V_write;
output  [24:0] res_stream_V_data_6_V_din;
input   res_stream_V_data_6_V_full_n;
output   res_stream_V_data_6_V_write;
output  [24:0] res_stream_V_data_7_V_din;
input   res_stream_V_data_7_V_full_n;
output   res_stream_V_data_7_V_write;
output  [24:0] res_stream_V_data_8_V_din;
input   res_stream_V_data_8_V_full_n;
output   res_stream_V_data_8_V_write;
output  [24:0] res_stream_V_data_9_V_din;
input   res_stream_V_data_9_V_full_n;
output   res_stream_V_data_9_V_write;
output  [24:0] res_stream_V_data_10_V_din;
input   res_stream_V_data_10_V_full_n;
output   res_stream_V_data_10_V_write;
output  [24:0] res_stream_V_data_11_V_din;
input   res_stream_V_data_11_V_full_n;
output   res_stream_V_data_11_V_write;
output  [24:0] res_stream_V_data_12_V_din;
input   res_stream_V_data_12_V_full_n;
output   res_stream_V_data_12_V_write;
output  [24:0] res_stream_V_data_13_V_din;
input   res_stream_V_data_13_V_full_n;
output   res_stream_V_data_13_V_write;
output  [24:0] res_stream_V_data_14_V_din;
input   res_stream_V_data_14_V_full_n;
output   res_stream_V_data_14_V_write;
output  [24:0] res_stream_V_data_15_V_din;
input   res_stream_V_data_15_V_full_n;
output   res_stream_V_data_15_V_write;
output  [24:0] res_stream_V_data_16_V_din;
input   res_stream_V_data_16_V_full_n;
output   res_stream_V_data_16_V_write;
output  [24:0] res_stream_V_data_17_V_din;
input   res_stream_V_data_17_V_full_n;
output   res_stream_V_data_17_V_write;
output  [24:0] res_stream_V_data_18_V_din;
input   res_stream_V_data_18_V_full_n;
output   res_stream_V_data_18_V_write;
output  [24:0] res_stream_V_data_19_V_din;
input   res_stream_V_data_19_V_full_n;
output   res_stream_V_data_19_V_write;
output  [24:0] res_stream_V_data_20_V_din;
input   res_stream_V_data_20_V_full_n;
output   res_stream_V_data_20_V_write;
output  [24:0] res_stream_V_data_21_V_din;
input   res_stream_V_data_21_V_full_n;
output   res_stream_V_data_21_V_write;
output  [24:0] res_stream_V_data_22_V_din;
input   res_stream_V_data_22_V_full_n;
output   res_stream_V_data_22_V_write;
output  [24:0] res_stream_V_data_23_V_din;
input   res_stream_V_data_23_V_full_n;
output   res_stream_V_data_23_V_write;
output  [24:0] res_stream_V_data_24_V_din;
input   res_stream_V_data_24_V_full_n;
output   res_stream_V_data_24_V_write;
output  [24:0] res_stream_V_data_25_V_din;
input   res_stream_V_data_25_V_full_n;
output   res_stream_V_data_25_V_write;
output  [24:0] res_stream_V_data_26_V_din;
input   res_stream_V_data_26_V_full_n;
output   res_stream_V_data_26_V_write;
output  [24:0] res_stream_V_data_27_V_din;
input   res_stream_V_data_27_V_full_n;
output   res_stream_V_data_27_V_write;
output  [24:0] res_stream_V_data_28_V_din;
input   res_stream_V_data_28_V_full_n;
output   res_stream_V_data_28_V_write;
output  [24:0] res_stream_V_data_29_V_din;
input   res_stream_V_data_29_V_full_n;
output   res_stream_V_data_29_V_write;
output  [24:0] res_stream_V_data_30_V_din;
input   res_stream_V_data_30_V_full_n;
output   res_stream_V_data_30_V_write;
output  [24:0] res_stream_V_data_31_V_din;
input   res_stream_V_data_31_V_full_n;
output   res_stream_V_data_31_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg res_stream_V_data_0_V_write;
reg res_stream_V_data_1_V_write;
reg res_stream_V_data_2_V_write;
reg res_stream_V_data_3_V_write;
reg res_stream_V_data_4_V_write;
reg res_stream_V_data_5_V_write;
reg res_stream_V_data_6_V_write;
reg res_stream_V_data_7_V_write;
reg res_stream_V_data_8_V_write;
reg res_stream_V_data_9_V_write;
reg res_stream_V_data_10_V_write;
reg res_stream_V_data_11_V_write;
reg res_stream_V_data_12_V_write;
reg res_stream_V_data_13_V_write;
reg res_stream_V_data_14_V_write;
reg res_stream_V_data_15_V_write;
reg res_stream_V_data_16_V_write;
reg res_stream_V_data_17_V_write;
reg res_stream_V_data_18_V_write;
reg res_stream_V_data_19_V_write;
reg res_stream_V_data_20_V_write;
reg res_stream_V_data_21_V_write;
reg res_stream_V_data_22_V_write;
reg res_stream_V_data_23_V_write;
reg res_stream_V_data_24_V_write;
reg res_stream_V_data_25_V_write;
reg res_stream_V_data_26_V_write;
reg res_stream_V_data_27_V_write;
reg res_stream_V_data_28_V_write;
reg res_stream_V_data_29_V_write;
reg res_stream_V_data_30_V_write;
reg res_stream_V_data_31_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] kernel_data_V_1333;
reg   [15:0] kernel_data_V_2334;
reg   [15:0] kernel_data_V_4;
reg   [15:0] kernel_data_V_5;
reg   [15:0] kernel_data_V_7;
reg   [15:0] kernel_data_V_8;
reg   [15:0] kernel_data_V_0;
reg   [15:0] kernel_data_V_3335;
reg   [15:0] kernel_data_V_6;
reg   [31:0] sX_3;
reg   [31:0] sY_3;
reg   [31:0] pY_3;
reg   [31:0] pX_3;
reg    res_stream_V_data_0_V_blk_n;
wire    ap_CS_fsm_state3;
reg   [0:0] and_ln284_2_reg_732;
reg    res_stream_V_data_1_V_blk_n;
reg    res_stream_V_data_2_V_blk_n;
reg    res_stream_V_data_3_V_blk_n;
reg    res_stream_V_data_4_V_blk_n;
reg    res_stream_V_data_5_V_blk_n;
reg    res_stream_V_data_6_V_blk_n;
reg    res_stream_V_data_7_V_blk_n;
reg    res_stream_V_data_8_V_blk_n;
reg    res_stream_V_data_9_V_blk_n;
reg    res_stream_V_data_10_V_blk_n;
reg    res_stream_V_data_11_V_blk_n;
reg    res_stream_V_data_12_V_blk_n;
reg    res_stream_V_data_13_V_blk_n;
reg    res_stream_V_data_14_V_blk_n;
reg    res_stream_V_data_15_V_blk_n;
reg    res_stream_V_data_16_V_blk_n;
reg    res_stream_V_data_17_V_blk_n;
reg    res_stream_V_data_18_V_blk_n;
reg    res_stream_V_data_19_V_blk_n;
reg    res_stream_V_data_20_V_blk_n;
reg    res_stream_V_data_21_V_blk_n;
reg    res_stream_V_data_22_V_blk_n;
reg    res_stream_V_data_23_V_blk_n;
reg    res_stream_V_data_24_V_blk_n;
reg    res_stream_V_data_25_V_blk_n;
reg    res_stream_V_data_26_V_blk_n;
reg    res_stream_V_data_27_V_blk_n;
reg    res_stream_V_data_28_V_blk_n;
reg    res_stream_V_data_29_V_blk_n;
reg    res_stream_V_data_30_V_blk_n;
reg    res_stream_V_data_31_V_blk_n;
reg   [31:0] sX_3_load_reg_700;
wire   [0:0] icmp_ln284_fu_413_p2;
reg   [0:0] icmp_ln284_reg_705;
reg   [31:0] sY_3_load_reg_710;
wire   [0:0] icmp_ln284_1_fu_423_p2;
reg   [0:0] icmp_ln284_1_reg_715;
reg   [31:0] pY_3_load_reg_720;
reg   [31:0] pX_3_load_reg_726;
wire   [0:0] and_ln284_2_fu_481_p2;
reg   [24:0] tmp_data_0_V_reg_736;
wire    ap_CS_fsm_state2;
wire    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_ready;
wire    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_done;
reg   [24:0] tmp_data_1_V_reg_741;
reg   [24:0] tmp_data_2_V_reg_746;
reg   [24:0] tmp_data_3_V_reg_751;
reg   [24:0] tmp_data_4_V_reg_756;
reg   [24:0] tmp_data_5_V_reg_761;
reg   [24:0] tmp_data_6_V_reg_766;
reg   [24:0] tmp_data_7_V_reg_771;
reg   [24:0] tmp_data_8_V_reg_776;
reg   [24:0] tmp_data_9_V_reg_781;
reg   [24:0] tmp_data_10_V_reg_786;
reg   [24:0] tmp_data_11_V_reg_791;
reg   [24:0] tmp_data_12_V_reg_796;
reg   [24:0] tmp_data_13_V_reg_801;
reg   [24:0] tmp_data_14_V_reg_806;
reg   [24:0] tmp_data_15_V_reg_811;
reg   [24:0] tmp_data_16_V_reg_816;
reg   [24:0] tmp_data_17_V_reg_821;
reg   [24:0] tmp_data_18_V_reg_826;
reg   [24:0] tmp_data_19_V_reg_831;
reg   [24:0] tmp_data_20_V_reg_836;
reg   [24:0] tmp_data_21_V_reg_841;
reg   [24:0] tmp_data_22_V_reg_846;
reg   [24:0] tmp_data_23_V_reg_851;
reg   [24:0] tmp_data_24_V_reg_856;
reg   [24:0] tmp_data_25_V_reg_861;
reg   [24:0] tmp_data_26_V_reg_866;
reg   [24:0] tmp_data_27_V_reg_871;
reg   [24:0] tmp_data_28_V_reg_876;
reg   [24:0] tmp_data_29_V_reg_881;
reg   [24:0] tmp_data_30_V_reg_886;
reg   [24:0] tmp_data_31_V_reg_891;
wire   [0:0] icmp_ln303_fu_615_p2;
reg   [0:0] icmp_ln303_reg_896;
wire    io_acc_block_signal_op111;
reg    ap_block_state3;
wire   [31:0] select_ln318_fu_636_p3;
reg   [31:0] select_ln318_reg_900;
wire   [0:0] icmp_ln307_fu_655_p2;
reg   [0:0] icmp_ln307_reg_905;
wire   [31:0] select_ln313_fu_676_p3;
reg   [31:0] select_ln313_reg_909;
wire    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start;
wire    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_idle;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_0;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_1;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_2;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_3;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_4;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_5;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_6;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_7;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_8;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_9;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_10;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_11;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_12;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_13;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_14;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_15;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_16;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_17;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_18;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_19;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_20;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_21;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_22;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_23;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_24;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_25;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_26;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_27;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_28;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_29;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_30;
wire   [24:0] grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_31;
reg    call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_start;
wire    call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_done;
wire    call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_ready;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_0;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_1;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_2;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_3;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_4;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_5;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_6;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_7;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_8;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_240_p4;
reg   [31:0] storemerge_reg_236;
wire    ap_CS_fsm_state4;
reg    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start_reg;
wire   [31:0] add_ln311_fu_660_p2;
wire   [31:0] add_ln316_fu_620_p2;
wire   [30:0] tmp_431_fu_433_p4;
wire   [30:0] tmp_432_fu_453_p4;
wire   [0:0] icmp_ln284_2_fu_443_p2;
wire   [0:0] icmp_ln284_3_fu_463_p2;
wire   [0:0] and_ln284_1_fu_475_p2;
wire   [0:0] and_ln284_fu_469_p2;
wire   [31:0] add_ln318_fu_631_p2;
wire   [31:0] add_ln313_fu_671_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_condition_305;
reg    ap_condition_314;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 kernel_data_V_1333 = 16'd0;
#0 kernel_data_V_2334 = 16'd0;
#0 kernel_data_V_4 = 16'd0;
#0 kernel_data_V_5 = 16'd0;
#0 kernel_data_V_7 = 16'd0;
#0 kernel_data_V_8 = 16'd0;
#0 kernel_data_V_0 = 16'd0;
#0 kernel_data_V_3335 = 16'd0;
#0 kernel_data_V_6 = 16'd0;
#0 sX_3 = 32'd0;
#0 sY_3 = 32'd0;
#0 pY_3 = 32'd0;
#0 pX_3 = 32'd0;
#0 grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start_reg = 1'b0;
end

dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start),
    .ap_done(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_done),
    .ap_idle(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_idle),
    .ap_ready(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_ready),
    .kernel_data_V_8(kernel_data_V_8),
    .kernel_data_V_0(kernel_data_V_0),
    .kernel_data_V_1333(kernel_data_V_1333),
    .kernel_data_V_2334(kernel_data_V_2334),
    .kernel_data_V_3335(kernel_data_V_3335),
    .kernel_data_V_4(kernel_data_V_4),
    .kernel_data_V_5(kernel_data_V_5),
    .kernel_data_V_6(kernel_data_V_6),
    .kernel_data_V_7(kernel_data_V_7),
    .ap_return_0(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_0),
    .ap_return_1(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_1),
    .ap_return_2(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_2),
    .ap_return_3(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_3),
    .ap_return_4(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_4),
    .ap_return_5(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_5),
    .ap_return_6(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_6),
    .ap_return_7(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_7),
    .ap_return_8(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_8),
    .ap_return_9(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_9),
    .ap_return_10(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_10),
    .ap_return_11(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_11),
    .ap_return_12(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_12),
    .ap_return_13(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_13),
    .ap_return_14(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_14),
    .ap_return_15(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_15),
    .ap_return_16(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_16),
    .ap_return_17(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_17),
    .ap_return_18(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_18),
    .ap_return_19(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_19),
    .ap_return_20(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_20),
    .ap_return_21(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_21),
    .ap_return_22(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_22),
    .ap_return_23(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_23),
    .ap_return_24(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_24),
    .ap_return_25(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_25),
    .ap_return_26(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_26),
    .ap_return_27(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_27),
    .ap_return_28(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_28),
    .ap_return_29(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_29),
    .ap_return_30(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_30),
    .ap_return_31(grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_31)
);

shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_ready),
    .in_elem_data_V_read(in_elem_data_V_read),
    .kernel_window_1_V_read(kernel_data_V_1333),
    .kernel_window_2_V_read(kernel_data_V_2334),
    .kernel_window_4_V_read(kernel_data_V_4),
    .kernel_window_5_V_read(kernel_data_V_5),
    .kernel_window_7_V_read(kernel_data_V_7),
    .kernel_window_8_V_read(kernel_data_V_8),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_8)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (1'd1 == and_ln284_2_fu_481_p2))) begin
            grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start_reg <= 1'b1;
        end else if ((grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_ready == 1'b1)) begin
            grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_305)) begin
        if ((icmp_ln303_fu_615_p2 == 1'd1)) begin
            pX_3 <= 32'd0;
        end else if ((icmp_ln303_fu_615_p2 == 1'd0)) begin
            pX_3 <= add_ln316_fu_620_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_314)) begin
        if ((icmp_ln307_fu_655_p2 == 1'd1)) begin
            pY_3 <= 32'd0;
        end else if ((icmp_ln307_fu_655_p2 == 1'd0)) begin
            pY_3 <= add_ln311_fu_660_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln303_reg_896 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        sX_3 <= select_ln318_reg_900;
    end else if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln303_fu_615_p2 == 1'd1))) begin
        sX_3 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_655_p2 == 1'd1) & (icmp_ln303_fu_615_p2 == 1'd1))) begin
        storemerge_reg_236 <= 32'd0;
    end else if (((icmp_ln307_reg_905 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln303_reg_896 == 1'd1))) begin
        storemerge_reg_236 <= select_ln313_reg_909;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        and_ln284_2_reg_732 <= and_ln284_2_fu_481_p2;
        icmp_ln284_1_reg_715 <= icmp_ln284_1_fu_423_p2;
        icmp_ln284_reg_705 <= icmp_ln284_fu_413_p2;
        kernel_data_V_0 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_0;
        kernel_data_V_1333 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_3;
        kernel_data_V_2334 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_4;
        kernel_data_V_3335 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_1;
        kernel_data_V_4 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_5;
        kernel_data_V_5 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_6;
        kernel_data_V_6 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_2;
        kernel_data_V_7 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_7;
        kernel_data_V_8 <= call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_return_8;
        pX_3_load_reg_726 <= pX_3;
        pY_3_load_reg_720 <= pY_3;
        sX_3_load_reg_700 <= sX_3;
        sY_3_load_reg_710 <= sY_3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln303_reg_896 <= icmp_ln303_fu_615_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln303_fu_615_p2 == 1'd1))) begin
        icmp_ln307_reg_905 <= icmp_ln307_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln303_reg_896 == 1'd1))) begin
        sY_3 <= ap_phi_mux_storemerge_phi_fu_240_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (icmp_ln307_fu_655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln303_fu_615_p2 == 1'd1))) begin
        select_ln313_reg_909 <= select_ln313_fu_676_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (icmp_ln303_fu_615_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        select_ln318_reg_900 <= select_ln318_fu_636_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_data_0_V_reg_736 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_0;
        tmp_data_10_V_reg_786 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_10;
        tmp_data_11_V_reg_791 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_11;
        tmp_data_12_V_reg_796 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_12;
        tmp_data_13_V_reg_801 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_13;
        tmp_data_14_V_reg_806 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_14;
        tmp_data_15_V_reg_811 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_15;
        tmp_data_16_V_reg_816 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_16;
        tmp_data_17_V_reg_821 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_17;
        tmp_data_18_V_reg_826 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_18;
        tmp_data_19_V_reg_831 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_19;
        tmp_data_1_V_reg_741 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_1;
        tmp_data_20_V_reg_836 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_20;
        tmp_data_21_V_reg_841 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_21;
        tmp_data_22_V_reg_846 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_22;
        tmp_data_23_V_reg_851 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_23;
        tmp_data_24_V_reg_856 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_24;
        tmp_data_25_V_reg_861 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_25;
        tmp_data_26_V_reg_866 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_26;
        tmp_data_27_V_reg_871 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_27;
        tmp_data_28_V_reg_876 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_28;
        tmp_data_29_V_reg_881 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_29;
        tmp_data_2_V_reg_746 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_2;
        tmp_data_30_V_reg_886 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_30;
        tmp_data_31_V_reg_891 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_31;
        tmp_data_3_V_reg_751 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_3;
        tmp_data_4_V_reg_756 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_4;
        tmp_data_5_V_reg_761 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_5;
        tmp_data_6_V_reg_766 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_6;
        tmp_data_7_V_reg_771 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_7;
        tmp_data_8_V_reg_776 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_8;
        tmp_data_9_V_reg_781 <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_return_9;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln307_reg_905 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln303_reg_896 == 1'd1))) begin
        ap_phi_mux_storemerge_phi_fu_240_p4 = select_ln313_reg_909;
    end else begin
        ap_phi_mux_storemerge_phi_fu_240_p4 = storemerge_reg_236;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_start = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_273_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_0_V_blk_n = res_stream_V_data_0_V_full_n;
    end else begin
        res_stream_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_0_V_write = 1'b1;
    end else begin
        res_stream_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_10_V_blk_n = res_stream_V_data_10_V_full_n;
    end else begin
        res_stream_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_10_V_write = 1'b1;
    end else begin
        res_stream_V_data_10_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_11_V_blk_n = res_stream_V_data_11_V_full_n;
    end else begin
        res_stream_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_11_V_write = 1'b1;
    end else begin
        res_stream_V_data_11_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_12_V_blk_n = res_stream_V_data_12_V_full_n;
    end else begin
        res_stream_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_12_V_write = 1'b1;
    end else begin
        res_stream_V_data_12_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_13_V_blk_n = res_stream_V_data_13_V_full_n;
    end else begin
        res_stream_V_data_13_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_13_V_write = 1'b1;
    end else begin
        res_stream_V_data_13_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_14_V_blk_n = res_stream_V_data_14_V_full_n;
    end else begin
        res_stream_V_data_14_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_14_V_write = 1'b1;
    end else begin
        res_stream_V_data_14_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_15_V_blk_n = res_stream_V_data_15_V_full_n;
    end else begin
        res_stream_V_data_15_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_15_V_write = 1'b1;
    end else begin
        res_stream_V_data_15_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_16_V_blk_n = res_stream_V_data_16_V_full_n;
    end else begin
        res_stream_V_data_16_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_16_V_write = 1'b1;
    end else begin
        res_stream_V_data_16_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_17_V_blk_n = res_stream_V_data_17_V_full_n;
    end else begin
        res_stream_V_data_17_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_17_V_write = 1'b1;
    end else begin
        res_stream_V_data_17_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_18_V_blk_n = res_stream_V_data_18_V_full_n;
    end else begin
        res_stream_V_data_18_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_18_V_write = 1'b1;
    end else begin
        res_stream_V_data_18_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_19_V_blk_n = res_stream_V_data_19_V_full_n;
    end else begin
        res_stream_V_data_19_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_19_V_write = 1'b1;
    end else begin
        res_stream_V_data_19_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_1_V_blk_n = res_stream_V_data_1_V_full_n;
    end else begin
        res_stream_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_1_V_write = 1'b1;
    end else begin
        res_stream_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_20_V_blk_n = res_stream_V_data_20_V_full_n;
    end else begin
        res_stream_V_data_20_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_20_V_write = 1'b1;
    end else begin
        res_stream_V_data_20_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_21_V_blk_n = res_stream_V_data_21_V_full_n;
    end else begin
        res_stream_V_data_21_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_21_V_write = 1'b1;
    end else begin
        res_stream_V_data_21_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_22_V_blk_n = res_stream_V_data_22_V_full_n;
    end else begin
        res_stream_V_data_22_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_22_V_write = 1'b1;
    end else begin
        res_stream_V_data_22_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_23_V_blk_n = res_stream_V_data_23_V_full_n;
    end else begin
        res_stream_V_data_23_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_23_V_write = 1'b1;
    end else begin
        res_stream_V_data_23_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_24_V_blk_n = res_stream_V_data_24_V_full_n;
    end else begin
        res_stream_V_data_24_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_24_V_write = 1'b1;
    end else begin
        res_stream_V_data_24_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_25_V_blk_n = res_stream_V_data_25_V_full_n;
    end else begin
        res_stream_V_data_25_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_25_V_write = 1'b1;
    end else begin
        res_stream_V_data_25_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_26_V_blk_n = res_stream_V_data_26_V_full_n;
    end else begin
        res_stream_V_data_26_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_26_V_write = 1'b1;
    end else begin
        res_stream_V_data_26_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_27_V_blk_n = res_stream_V_data_27_V_full_n;
    end else begin
        res_stream_V_data_27_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_27_V_write = 1'b1;
    end else begin
        res_stream_V_data_27_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_28_V_blk_n = res_stream_V_data_28_V_full_n;
    end else begin
        res_stream_V_data_28_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_28_V_write = 1'b1;
    end else begin
        res_stream_V_data_28_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_29_V_blk_n = res_stream_V_data_29_V_full_n;
    end else begin
        res_stream_V_data_29_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_29_V_write = 1'b1;
    end else begin
        res_stream_V_data_29_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_2_V_blk_n = res_stream_V_data_2_V_full_n;
    end else begin
        res_stream_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_2_V_write = 1'b1;
    end else begin
        res_stream_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_30_V_blk_n = res_stream_V_data_30_V_full_n;
    end else begin
        res_stream_V_data_30_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_30_V_write = 1'b1;
    end else begin
        res_stream_V_data_30_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_31_V_blk_n = res_stream_V_data_31_V_full_n;
    end else begin
        res_stream_V_data_31_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_31_V_write = 1'b1;
    end else begin
        res_stream_V_data_31_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_3_V_blk_n = res_stream_V_data_3_V_full_n;
    end else begin
        res_stream_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_3_V_write = 1'b1;
    end else begin
        res_stream_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_4_V_blk_n = res_stream_V_data_4_V_full_n;
    end else begin
        res_stream_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_4_V_write = 1'b1;
    end else begin
        res_stream_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_5_V_blk_n = res_stream_V_data_5_V_full_n;
    end else begin
        res_stream_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_5_V_write = 1'b1;
    end else begin
        res_stream_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_6_V_blk_n = res_stream_V_data_6_V_full_n;
    end else begin
        res_stream_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_6_V_write = 1'b1;
    end else begin
        res_stream_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_7_V_blk_n = res_stream_V_data_7_V_full_n;
    end else begin
        res_stream_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_7_V_write = 1'b1;
    end else begin
        res_stream_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_8_V_blk_n = res_stream_V_data_8_V_full_n;
    end else begin
        res_stream_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_8_V_write = 1'b1;
    end else begin
        res_stream_V_data_8_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_9_V_blk_n = res_stream_V_data_9_V_full_n;
    end else begin
        res_stream_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_2_reg_732))) begin
        res_stream_V_data_9_V_write = 1'b1;
    end else begin
        res_stream_V_data_9_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'd0 == and_ln284_2_fu_481_p2) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (1'd1 == and_ln284_2_fu_481_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln311_fu_660_p2 = (pY_3_load_reg_720 + 32'd1);

assign add_ln313_fu_671_p2 = (sY_3_load_reg_710 + 32'd1);

assign add_ln316_fu_620_p2 = (pX_3_load_reg_726 + 32'd1);

assign add_ln318_fu_631_p2 = (sX_3_load_reg_700 + 32'd1);

assign and_ln284_1_fu_475_p2 = (icmp_ln284_3_fu_463_p2 & icmp_ln284_2_fu_443_p2);

assign and_ln284_2_fu_481_p2 = (and_ln284_fu_469_p2 & and_ln284_1_fu_475_p2);

assign and_ln284_fu_469_p2 = (icmp_ln284_fu_413_p2 & icmp_ln284_1_fu_423_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state3 = ((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732));
end

always @ (*) begin
    ap_condition_305 = (~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3));
end

always @ (*) begin
    ap_condition_314 = (~((io_acc_block_signal_op111 == 1'b0) & (1'd1 == and_ln284_2_reg_732)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln303_fu_615_p2 == 1'd1));
end

assign grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start = grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s_fu_247_ap_start_reg;

assign icmp_ln284_1_fu_423_p2 = ((sY_3 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln284_2_fu_443_p2 = (($signed(tmp_431_fu_433_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln284_3_fu_463_p2 = (($signed(tmp_432_fu_453_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_413_p2 = ((sX_3 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln303_fu_615_p2 = ((pX_3_load_reg_726 == 32'd27) ? 1'b1 : 1'b0);

assign icmp_ln307_fu_655_p2 = ((pY_3_load_reg_720 == 32'd27) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op111 = (res_stream_V_data_9_V_full_n & res_stream_V_data_8_V_full_n & res_stream_V_data_7_V_full_n & res_stream_V_data_6_V_full_n & res_stream_V_data_5_V_full_n & res_stream_V_data_4_V_full_n & res_stream_V_data_3_V_full_n & res_stream_V_data_31_V_full_n & res_stream_V_data_30_V_full_n & res_stream_V_data_2_V_full_n & res_stream_V_data_29_V_full_n & res_stream_V_data_28_V_full_n & res_stream_V_data_27_V_full_n & res_stream_V_data_26_V_full_n & res_stream_V_data_25_V_full_n & res_stream_V_data_24_V_full_n & res_stream_V_data_23_V_full_n & res_stream_V_data_22_V_full_n & res_stream_V_data_21_V_full_n & res_stream_V_data_20_V_full_n & res_stream_V_data_1_V_full_n & res_stream_V_data_19_V_full_n & res_stream_V_data_18_V_full_n & res_stream_V_data_17_V_full_n & res_stream_V_data_16_V_full_n & res_stream_V_data_15_V_full_n & res_stream_V_data_14_V_full_n & res_stream_V_data_13_V_full_n & res_stream_V_data_12_V_full_n & res_stream_V_data_11_V_full_n & res_stream_V_data_10_V_full_n & res_stream_V_data_0_V_full_n);

assign res_stream_V_data_0_V_din = tmp_data_0_V_reg_736;

assign res_stream_V_data_10_V_din = tmp_data_10_V_reg_786;

assign res_stream_V_data_11_V_din = tmp_data_11_V_reg_791;

assign res_stream_V_data_12_V_din = tmp_data_12_V_reg_796;

assign res_stream_V_data_13_V_din = tmp_data_13_V_reg_801;

assign res_stream_V_data_14_V_din = tmp_data_14_V_reg_806;

assign res_stream_V_data_15_V_din = tmp_data_15_V_reg_811;

assign res_stream_V_data_16_V_din = tmp_data_16_V_reg_816;

assign res_stream_V_data_17_V_din = tmp_data_17_V_reg_821;

assign res_stream_V_data_18_V_din = tmp_data_18_V_reg_826;

assign res_stream_V_data_19_V_din = tmp_data_19_V_reg_831;

assign res_stream_V_data_1_V_din = tmp_data_1_V_reg_741;

assign res_stream_V_data_20_V_din = tmp_data_20_V_reg_836;

assign res_stream_V_data_21_V_din = tmp_data_21_V_reg_841;

assign res_stream_V_data_22_V_din = tmp_data_22_V_reg_846;

assign res_stream_V_data_23_V_din = tmp_data_23_V_reg_851;

assign res_stream_V_data_24_V_din = tmp_data_24_V_reg_856;

assign res_stream_V_data_25_V_din = tmp_data_25_V_reg_861;

assign res_stream_V_data_26_V_din = tmp_data_26_V_reg_866;

assign res_stream_V_data_27_V_din = tmp_data_27_V_reg_871;

assign res_stream_V_data_28_V_din = tmp_data_28_V_reg_876;

assign res_stream_V_data_29_V_din = tmp_data_29_V_reg_881;

assign res_stream_V_data_2_V_din = tmp_data_2_V_reg_746;

assign res_stream_V_data_30_V_din = tmp_data_30_V_reg_886;

assign res_stream_V_data_31_V_din = tmp_data_31_V_reg_891;

assign res_stream_V_data_3_V_din = tmp_data_3_V_reg_751;

assign res_stream_V_data_4_V_din = tmp_data_4_V_reg_756;

assign res_stream_V_data_5_V_din = tmp_data_5_V_reg_761;

assign res_stream_V_data_6_V_din = tmp_data_6_V_reg_766;

assign res_stream_V_data_7_V_din = tmp_data_7_V_reg_771;

assign res_stream_V_data_8_V_din = tmp_data_8_V_reg_776;

assign res_stream_V_data_9_V_din = tmp_data_9_V_reg_781;

assign select_ln313_fu_676_p3 = ((icmp_ln284_1_reg_715[0:0] === 1'b1) ? 32'd2 : add_ln313_fu_671_p2);

assign select_ln318_fu_636_p3 = ((icmp_ln284_reg_705[0:0] === 1'b1) ? 32'd2 : add_ln318_fu_631_p2);

assign tmp_431_fu_433_p4 = {{pY_3[31:1]}};

assign tmp_432_fu_453_p4 = {{pX_3[31:1]}};

endmodule //compute_output_buffer_2d_array_array_ap_fixed_25_12_5_3_0_32u_config2_s
